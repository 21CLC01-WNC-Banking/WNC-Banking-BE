definitions:
  entity.Account:
    properties:
      balance:
        type: integer
      createdAt:
        type: string
      customerId:
        type: integer
      deletedAt:
        type: string
      id:
        type: integer
      number:
        type: string
      updatedAt:
        type: string
    type: object
  entity.Notification:
    properties:
      content:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      isSeen:
        type: boolean
      title:
        type: string
      type:
        description: incoming_transfer, outgoing_transfer, debt_reminder
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  entity.Transaction:
    properties:
      amount:
        type: integer
      bank_id:
        type: integer
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      id:
        type: string
      is_source_fee:
        type: boolean
      source_account_number:
        type: string
      source_balance:
        type: integer
      status:
        type: string
      target_account_number:
        type: string
      target_balance:
        type: integer
      type:
        type: string
      updatedAt:
        type: string
    type: object
  entity.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      role_id:
        type: integer
      updatedAt:
        type: string
    type: object
  httpcommon.Error:
    properties:
      code:
        type: string
      field:
        type: string
      message:
        type: string
    type: object
  httpcommon.HttpResponse-any:
    properties:
      data: {}
      errors:
        items:
          $ref: '#/definitions/httpcommon.Error'
        type: array
      success:
        type: boolean
    type: object
  httpcommon.HttpResponse-array_entity_Notification:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.Notification'
        type: array
      errors:
        items:
          $ref: '#/definitions/httpcommon.Error'
        type: array
      success:
        type: boolean
    type: object
  httpcommon.HttpResponse-array_entity_Transaction:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.Transaction'
        type: array
      errors:
        items:
          $ref: '#/definitions/httpcommon.Error'
        type: array
      success:
        type: boolean
    type: object
  httpcommon.HttpResponse-array_entity_User:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.User'
        type: array
      errors:
        items:
          $ref: '#/definitions/httpcommon.Error'
        type: array
      success:
        type: boolean
    type: object
  httpcommon.HttpResponse-array_model_GetTransactionsByCustomerResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.GetTransactionsByCustomerResponse'
        type: array
      errors:
        items:
          $ref: '#/definitions/httpcommon.Error'
        type: array
      success:
        type: boolean
    type: object
  httpcommon.HttpResponse-array_model_SavedReceiverResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.SavedReceiverResponse'
        type: array
      errors:
        items:
          $ref: '#/definitions/httpcommon.Error'
        type: array
      success:
        type: boolean
    type: object
  httpcommon.HttpResponse-entity_Transaction:
    properties:
      data:
        $ref: '#/definitions/entity.Transaction'
      errors:
        items:
          $ref: '#/definitions/httpcommon.Error'
        type: array
      success:
        type: boolean
    type: object
  httpcommon.HttpResponse-entity_User:
    properties:
      data:
        $ref: '#/definitions/entity.User'
      errors:
        items:
          $ref: '#/definitions/httpcommon.Error'
        type: array
      success:
        type: boolean
    type: object
  httpcommon.HttpResponse-int64:
    properties:
      data:
        type: integer
      errors:
        items:
          $ref: '#/definitions/httpcommon.Error'
        type: array
      success:
        type: boolean
    type: object
  httpcommon.HttpResponse-model_AccountResponse:
    properties:
      data:
        $ref: '#/definitions/model.AccountResponse'
      errors:
        items:
          $ref: '#/definitions/httpcommon.Error'
        type: array
      success:
        type: boolean
    type: object
  httpcommon.HttpResponse-model_GetCustomerNameByAccountNumberResponse:
    properties:
      data:
        $ref: '#/definitions/model.GetCustomerNameByAccountNumberResponse'
      errors:
        items:
          $ref: '#/definitions/httpcommon.Error'
        type: array
      success:
        type: boolean
    type: object
  httpcommon.HttpResponse-string:
    properties:
      data:
        type: string
      errors:
        items:
          $ref: '#/definitions/httpcommon.Error'
        type: array
      success:
        type: boolean
    type: object
  model.AccountResponse:
    properties:
      account:
        $ref: '#/definitions/entity.Account'
      name:
        type: string
    required:
    - account
    - name
    type: object
  model.AddAmountToAccountRequest:
    properties:
      accountNumber:
        type: string
      amount:
        type: integer
      description:
        type: string
    required:
    - accountNumber
    - amount
    type: object
  model.GetCustomerNameByAccountNumberResponse:
    properties:
      name:
        type: string
    type: object
  model.GetTransactionsByCustomerResponse:
    properties:
      customerName:
        type: string
      transactions:
        items:
          $ref: '#/definitions/model.GetTransactionsResponse'
        type: array
    type: object
  model.GetTransactionsResponse:
    properties:
      amount:
        type: integer
      balance:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      sourceAccountNumber:
        type: string
      targetAccountNumber:
        type: string
      type:
        type: string
    type: object
  model.InternalTransferRequest:
    properties:
      otp:
        type: string
      transactionId:
        type: string
    required:
    - otp
    - transactionId
    type: object
  model.LoginRequest:
    properties:
      email:
        maxLength: 255
        minLength: 10
        type: string
      password:
        maxLength: 255
        minLength: 8
        type: string
      recaptchaToken:
        type: string
    required:
    - email
    - password
    - recaptchaToken
    type: object
  model.NotificationRequest:
    properties:
      body:
        type: string
      title:
        type: string
      token:
        type: string
    type: object
  model.PreInternalTransferRequest:
    properties:
      amount:
        minimum: 0
        type: integer
      description:
        type: string
      isSourceFee:
        type: boolean
      sourceAccountNumber:
        type: string
      targetAccountNumber:
        type: string
      type:
        type: string
    required:
    - amount
    - description
    - isSourceFee
    - sourceAccountNumber
    - targetAccountNumber
    - type
    type: object
  model.Receiver:
    properties:
      bankId:
        type: integer
      receiverAccountNumber:
        type: string
      receiverNickname:
        type: string
    required:
    - receiverAccountNumber
    - receiverNickname
    type: object
  model.RegisterRequest:
    properties:
      email:
        maxLength: 255
        minLength: 10
        type: string
      name:
        maxLength: 255
        minLength: 5
        type: string
      phoneNumber:
        maxLength: 255
        minLength: 10
        type: string
    required:
    - email
    - name
    - phoneNumber
    type: object
  model.SavedReceiverResponse:
    properties:
      id:
        type: integer
      receiverAccountNumber:
        type: string
      receiverNickname:
        type: string
    required:
    - id
    - receiverAccountNumber
    - receiverNickname
    type: object
  model.SendOTPRequest:
    properties:
      email:
        maxLength: 255
        minLength: 10
        type: string
    required:
    - email
    type: object
  model.SetPasswordRequest:
    properties:
      email:
        maxLength: 255
        minLength: 10
        type: string
      otp:
        maxLength: 6
        minLength: 6
        type: string
      password:
        maxLength: 255
        minLength: 8
        type: string
    required:
    - email
    - otp
    - password
    type: object
  model.UpdateReceiverRequest:
    properties:
      newNickname:
        type: string
    required:
    - newNickname
    type: object
  model.VerifyOTPRequest:
    properties:
      email:
        maxLength: 255
        minLength: 10
        type: string
      otp:
        maxLength: 6
        minLength: 6
        type: string
    required:
    - email
    - otp
    type: object
info:
  contact: {}
paths:
  /account/:
    get:
      description: Get Account by Customer ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-model_AccountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Get Account by Customer ID
      tags:
      - Accounts
  /account/customer-name:
    get:
      description: Get Customer Name by Account Number
      parameters:
      - description: Account payload
        in: query
        name: accountNumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-model_GetCustomerNameByAccountNumberResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Get Customer Name by Account Number
      tags:
      - Accounts
  /admin/staff:
    get:
      description: Admin get all staff
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-array_entity_User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Admin get all staff
      tags:
      - Admins
  /admin/staff/{staffId}:
    get:
      description: Admin get one staff
      parameters:
      - description: Staff ID
        in: path
        name: staffId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-entity_User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Admin get one staff
      tags:
      - Admins
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Set a new password after OTP verification
      parameters:
      - description: Set Password payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.SetPasswordRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Set Password
      tags:
      - Auths
  /auth/forgot-password/otp:
    post:
      consumes:
      - application/json
      description: Send OTP to user email
      parameters:
      - description: Send OTP payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.SendOTPRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Send OTP to Mail
      tags:
      - Auths
  /auth/forgot-password/verify-otp:
    post:
      consumes:
      - application/json
      description: Verify OTP with email and otp
      parameters:
      - description: Verify OTP payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.VerifyOTPRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Verify OTP
      tags:
      - Auths
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login to account
      parameters:
      - description: Auth payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-entity_User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Login
      tags:
      - Auths
  /core/estimate-transfer-fee:
    get:
      consumes:
      - application/json
      description: Estimate the internal transfer fee
      parameters:
      - description: Amount to estimate
        in: query
        name: amount
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-int64'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: EstimateTransferFee
      tags:
      - Cores
  /core/test-notification:
    post:
      consumes:
      - application/json
      description: Notification test
      parameters:
      - description: Notification payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.NotificationRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Notification test
      tags:
      - Cores
  /customer/notification:
    get:
      description: Get All Notification
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-array_entity_Notification'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Get All Notification
      tags:
      - Customer
    patch:
      description: Seen notification by id
      parameters:
      - description: Id of notification
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Seen notification by id
      tags:
      - Customer
  /customer/transactions:
    get:
      description: Get All Transactions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-array_entity_Transaction'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Get All Transactions
      tags:
      - Customer
  /saved-receiver:
    get:
      consumes:
      - application/json
      description: Fetches all saved receivers for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-array_model_SavedReceiverResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Get all saved receivers
      tags:
      - Receivers
    post:
      consumes:
      - application/json
      description: Add a new receiver
      parameters:
      - description: Receiver Payload
        in: body
        name: receiver
        required: true
        schema:
          $ref: '#/definitions/model.Receiver'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Add Receiver
      tags:
      - Receivers
  /saved-receiver/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a saved receiver by receiver ID
      parameters:
      - description: Receiver ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Delete a saved receiver
      tags:
      - Receivers
    put:
      consumes:
      - application/json
      description: Renames a saved receiver's nickname by receiver ID
      parameters:
      - description: Receiver ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request body for renaming the receiver
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.UpdateReceiverRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Rename a saved receiver
      tags:
      - Receivers
  /staff/add-amount:
    post:
      consumes:
      - application/json
      description: Add amount to account
      parameters:
      - description: AddAmount payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.AddAmountToAccountRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Add amount to account
      tags:
      - Staff
  /staff/register-customer:
    post:
      consumes:
      - application/json
      description: Staff register customer
      parameters:
      - description: Auth payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RegisterRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Register customer
      tags:
      - Staff
  /staff/transactions-by-account:
    get:
      consumes:
      - application/json
      description: Get transactions by account number
      parameters:
      - description: Account payload
        in: query
        name: accountNumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-array_model_GetTransactionsByCustomerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Get transactions by account number
      tags:
      - Staff
  /transaction/internal-transfer:
    post:
      consumes:
      - application/json
      description: Verify OTP and transaction from internal account to internal account
      parameters:
      - description: Transaction payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.InternalTransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-entity_Transaction'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Transaction
      tags:
      - Transaction
  /transaction/pre-internal-transfer:
    post:
      consumes:
      - application/json
      description: Pre Transaction from internal account to internal account
      parameters:
      - description: Transaction payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.PreInternalTransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpcommon.HttpResponse-any'
      summary: Transaction
      tags:
      - Transaction
swagger: "2.0"
