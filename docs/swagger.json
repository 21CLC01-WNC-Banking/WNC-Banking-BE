{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "basePath": "/api/v1",
    "paths": {
        "/account/": {
            "get": {
                "description": "Get Account by Customer Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get Account by Customer Id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-model_AccountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/account/customer-name": {
            "get": {
                "description": "Get Customer Name by Account Number",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get Customer Name by Account Number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account payload",
                        "name": "accountNumber",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-model_GetCustomerNameByAccountNumberResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/account/get-external-account-name": {
            "post": {
                "description": "Get external account name by account number from external bank",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get external account name",
                "parameters": [
                    {
                        "description": "PartnerBank payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GetExternalAccountNameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/admin/external-transaction": {
            "get": {
                "description": "Get external transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Get external transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "yyyy-MM-dd",
                        "name": "fromDate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "yyyy-MM-dd",
                        "name": "toDate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Partner Bank Id",
                        "name": "bankId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-entity_Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/admin/partner-bank": {
            "post": {
                "description": "Add a partner bank",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Add Partner Bank",
                "parameters": [
                    {
                        "description": "PartnerBank payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PartnerBankRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/admin/staff": {
            "get": {
                "description": "Admin get all staff",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Admin get all staff",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-array_entity_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            },
            "put": {
                "description": "Admin update one staff",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Admin update one staff ( only update non-empty field )",
                "parameters": [
                    {
                        "description": "Staff payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateStaffRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            },
            "post": {
                "description": "Admin create one staff",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Admin create one staff",
                "parameters": [
                    {
                        "description": "Staff payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateStaffRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-model_CreateStaffResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/admin/staff/{staffId}": {
            "get": {
                "description": "Admin get one staff",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Admin get one staff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Staff Id",
                        "name": "staffId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-entity_User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            },
            "delete": {
                "description": "Admin delete one staff",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Admin delete one staff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Staff Id",
                        "name": "staffId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/auth/change-password": {
            "post": {
                "description": "Change password for logged in users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auths"
                ],
                "summary": "Change Password",
                "parameters": [
                    {
                        "description": "Set Password payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/auth/close": {
            "post": {
                "description": "Close account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auths"
                ],
                "summary": "Close account",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "description": "Set a new password after OTP verification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auths"
                ],
                "summary": "Set Password",
                "parameters": [
                    {
                        "description": "Set Password payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/auth/forgot-password/otp": {
            "post": {
                "description": "Send OTP to user email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auths"
                ],
                "summary": "Send OTP to Mail",
                "parameters": [
                    {
                        "description": "Send OTP payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SendOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/auth/forgot-password/verify-otp": {
            "post": {
                "description": "Verify OTP with email and otp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auths"
                ],
                "summary": "Verify OTP",
                "parameters": [
                    {
                        "description": "Verify OTP payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.VerifyOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login to account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auths"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Auth payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-entity_User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Logout",
                "tags": [
                    "Auths"
                ],
                "summary": "Logout",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/core/estimate-transfer-fee": {
            "get": {
                "description": "Estimate the internal transfer fee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cores"
                ],
                "summary": "EstimateTransferFee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Amount to estimate",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-int64"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/core/test-notification": {
            "post": {
                "description": "Notification test",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cores"
                ],
                "summary": "Notification test",
                "parameters": [
                    {
                        "description": "Notification payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NotificationRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/customer/notification": {
            "get": {
                "description": "Get All Notification",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Get All Notification",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-array_entity_Notification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            },
            "patch": {
                "description": "Seen notification by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Seen notification by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id of notification",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/customer/saved-receiver": {
            "get": {
                "description": "Fetches all saved receivers for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Receivers"
                ],
                "summary": "Get all saved receivers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-array_model_SavedReceiverResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new receiver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Receivers"
                ],
                "summary": "Add Receiver",
                "parameters": [
                    {
                        "description": "Receiver Payload",
                        "name": "receiver",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Receiver"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/customer/saved-receiver/{id}": {
            "put": {
                "description": "Renames a saved receiver's nickname by receiver Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Receivers"
                ],
                "summary": "Rename a saved receiver",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Receiver Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body for renaming the receiver",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateReceiverRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a saved receiver by receiver Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Receivers"
                ],
                "summary": "Delete a saved receiver",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Receiver Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/customer/transaction": {
            "get": {
                "description": "Get All Transactions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Get All Transactions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-array_entity_Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/customer/transaction/{transactionId}": {
            "get": {
                "description": "Retrieve a specific transaction by its Id for a given customer.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Get Transaction By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction Id",
                        "name": "transactionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-entity_Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/debt-reply/{debtReminderId}": {
            "get": {
                "description": "User get debt reply by a debt reminder id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Debt Reminder"
                ],
                "summary": "User get debt reply",
                "parameters": [
                    {
                        "type": "string",
                        "description": "debtReminder Id",
                        "name": "debtReminderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-entity_DebtReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/partner-bank/": {
            "get": {
                "description": "get list partner banks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Partner bank"
                ],
                "summary": "Partner bank",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-array_entity_PartnerBank"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/partner-bank/external-transfer-rsa": {
            "post": {
                "description": "receive external transfer from partner banks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Partner bank"
                ],
                "summary": "Partner bank",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-model_ExternalTransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/partner-bank/get-account-information": {
            "post": {
                "description": "Get account name in our bank by account number from external bank",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Partner bank"
                ],
                "summary": "Get account name",
                "parameters": [
                    {
                        "description": "PartnerBank payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AccountNumberInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-model_AccountNumberInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/staff/add-amount": {
            "post": {
                "description": "Add amount to account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Add amount to account",
                "parameters": [
                    {
                        "description": "AddAmount payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AddAmountToAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/staff/register-customer": {
            "post": {
                "description": "Staff register customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Register customer",
                "parameters": [
                    {
                        "description": "Auth payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/staff/transactions-by-account": {
            "get": {
                "description": "Get transactions by account number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Get transactions by account number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account payload",
                        "name": "accountNumber",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-array_model_GetTransactionsByCustomerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/transaction/cancel-debt-reminder/:id": {
            "put": {
                "description": "cancel a debt reminder from source or target user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Debt reminder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id of debt reminder",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Transaction payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DebtReminderReplyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/transaction/debt-reminder": {
            "post": {
                "description": "Add new Debt reminder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Debt reminder",
                "parameters": [
                    {
                        "description": "Transaction payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DebtReminderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/transaction/external-transfer": {
            "post": {
                "description": "Verify OTP and transaction from internal account to external account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "External transaction",
                "parameters": [
                    {
                        "description": "Transaction payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-entity_Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/transaction/internal-transfer": {
            "post": {
                "description": "Verify OTP and transaction from internal account to internal account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Internal transaction",
                "parameters": [
                    {
                        "description": "Transaction payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-entity_Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/transaction/pre-debt-transfer": {
            "post": {
                "description": "Pre Transaction for debt reminder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Debt transaction",
                "parameters": [
                    {
                        "description": "Transaction payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PreDebtTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/transaction/pre-external-transfer": {
            "post": {
                "description": "Pre Transaction from internal account to external account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "External transaction",
                "parameters": [
                    {
                        "description": "Transaction payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PreExternalTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/transaction/pre-internal-transfer": {
            "post": {
                "description": "Pre Transaction from internal account to internal account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Internal transaction",
                "parameters": [
                    {
                        "description": "Transaction payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PreInternalTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/transaction/received-debt-reminder": {
            "get": {
                "description": "get list Receive reminder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Debt reminder",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-model_DebtReminderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        },
        "/transaction/sent-debt-reminder": {
            "get": {
                "description": "get list Sent reminder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Debt reminder",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-model_DebtReminderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httpcommon.HttpResponse-any"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Account": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "customerId": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "number": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "entity.DebtReply": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "debtReminderId": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userReplyName": {
                    "type": "string"
                }
            }
        },
        "entity.Notification": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isSeen": {
                    "type": "boolean"
                },
                "type": {
                    "description": "incoming_transfer, outgoing_transfer, debt_reminder",
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "entity.PartnerBank": {
            "type": "object",
            "properties": {
                "bankCode": {
                    "type": "string"
                },
                "bankName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "logoUrl": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "researchApi": {
                    "type": "string"
                },
                "shortName": {
                    "type": "string"
                },
                "transferApi": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "entity.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "bankId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isSourceFee": {
                    "type": "boolean"
                },
                "sourceAccountNumber": {
                    "type": "string"
                },
                "sourceBalance": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "targetAccountNumber": {
                    "type": "string"
                },
                "targetBalance": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "httpcommon.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "httpcommon.HttpResponse-any": {
            "type": "object",
            "properties": {
                "data": {},
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httpcommon.HttpResponse-array_entity_Notification": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Notification"
                    }
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httpcommon.HttpResponse-array_entity_PartnerBank": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.PartnerBank"
                    }
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httpcommon.HttpResponse-array_entity_Transaction": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Transaction"
                    }
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httpcommon.HttpResponse-array_entity_User": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.User"
                    }
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httpcommon.HttpResponse-array_model_GetTransactionsByCustomerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GetTransactionsByCustomerResponse"
                    }
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httpcommon.HttpResponse-array_model_SavedReceiverResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SavedReceiverResponse"
                    }
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httpcommon.HttpResponse-entity_DebtReply": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/entity.DebtReply"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httpcommon.HttpResponse-entity_Transaction": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/entity.Transaction"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httpcommon.HttpResponse-entity_User": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/entity.User"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httpcommon.HttpResponse-int64": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "integer"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httpcommon.HttpResponse-model_AccountNumberInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.AccountNumberInfoResponse"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httpcommon.HttpResponse-model_AccountResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.AccountResponse"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httpcommon.HttpResponse-model_CreateStaffResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.CreateStaffResponse"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httpcommon.HttpResponse-model_DebtReminderResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.DebtReminderResponse"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httpcommon.HttpResponse-model_ExternalTransactionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.ExternalTransactionResponse"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httpcommon.HttpResponse-model_GetCustomerNameByAccountNumberResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.GetCustomerNameByAccountNumberResponse"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "httpcommon.HttpResponse-string": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpcommon.Error"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "model.AccountNumberInfoRequest": {
            "type": "object",
            "properties": {
                "desAccountNumber": {
                    "type": "string"
                },
                "exp": {
                    "type": "string"
                },
                "srcBankCode": {
                    "type": "string"
                }
            }
        },
        "model.AccountNumberInfoResponse": {
            "type": "object",
            "properties": {
                "desAccountName": {
                    "type": "string"
                },
                "desAccountNumber": {
                    "type": "string"
                }
            }
        },
        "model.AccountResponse": {
            "type": "object",
            "required": [
                "account",
                "name"
            ],
            "properties": {
                "account": {
                    "$ref": "#/definitions/entity.Account"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.AddAmountToAccountRequest": {
            "type": "object",
            "required": [
                "accountNumber",
                "amount"
            ],
            "properties": {
                "accountNumber": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "model.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "newPassword",
                "password"
            ],
            "properties": {
                "newPassword": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 8
                },
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 8
                }
            }
        },
        "model.CreateStaffRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "phoneNumber"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "model.CreateStaffResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "model.DebtReminderReplyRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "model.DebtReminderRequest": {
            "type": "object",
            "required": [
                "amount",
                "description",
                "sourceAccountNumber",
                "targetAccountNumber",
                "type"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "minimum": 0
                },
                "description": {
                    "type": "string"
                },
                "sourceAccountNumber": {
                    "type": "string"
                },
                "targetAccountNumber": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.DebtReminderResponse": {
            "type": "object",
            "required": [
                "debtReminder",
                "receiver",
                "sender"
            ],
            "properties": {
                "debtReminder": {
                    "$ref": "#/definitions/entity.Transaction"
                },
                "receiver": {
                    "type": "string"
                },
                "reply": {
                    "$ref": "#/definitions/entity.DebtReply"
                },
                "sender": {
                    "type": "string"
                }
            }
        },
        "model.ExternalTransactionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "signedData": {
                    "type": "string"
                }
            }
        },
        "model.GetCustomerNameByAccountNumberResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.GetExternalAccountNameRequest": {
            "type": "object",
            "properties": {
                "accountNumber": {
                    "type": "string"
                },
                "bankId": {
                    "type": "integer"
                }
            }
        },
        "model.GetTransactionsByCustomerResponse": {
            "type": "object",
            "properties": {
                "customerName": {
                    "type": "string"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GetTransactionsResponse"
                    }
                }
            }
        },
        "model.GetTransactionsResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "balance": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "sourceAccountNumber": {
                    "type": "string"
                },
                "targetAccountNumber": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "recaptchaToken"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 10
                },
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 8
                },
                "recaptchaToken": {
                    "type": "string"
                }
            }
        },
        "model.NotificationRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.PartnerBankRequest": {
            "type": "object",
            "properties": {
                "bankCode": {
                    "type": "string"
                },
                "bankName": {
                    "type": "string"
                },
                "logoUrl": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "researchApi": {
                    "type": "string"
                },
                "shortName": {
                    "type": "string"
                },
                "transferApi": {
                    "type": "string"
                }
            }
        },
        "model.PreDebtTransferRequest": {
            "type": "object",
            "required": [
                "transactionId"
            ],
            "properties": {
                "transactionId": {
                    "type": "string"
                }
            }
        },
        "model.PreExternalTransferRequest": {
            "type": "object",
            "required": [
                "amount",
                "description",
                "isSourceFee",
                "partnerBankId",
                "sourceAccountNumber",
                "targetAccountNumber",
                "type"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "minimum": 0
                },
                "description": {
                    "type": "string"
                },
                "isSourceFee": {
                    "type": "boolean"
                },
                "partnerBankId": {
                    "type": "integer"
                },
                "sourceAccountNumber": {
                    "type": "string"
                },
                "targetAccountNumber": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.PreInternalTransferRequest": {
            "type": "object",
            "required": [
                "amount",
                "description",
                "isSourceFee",
                "sourceAccountNumber",
                "targetAccountNumber",
                "type"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "minimum": 0
                },
                "description": {
                    "type": "string"
                },
                "isSourceFee": {
                    "type": "boolean"
                },
                "sourceAccountNumber": {
                    "type": "string"
                },
                "targetAccountNumber": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.Receiver": {
            "type": "object",
            "required": [
                "receiverAccountNumber",
                "receiverNickname"
            ],
            "properties": {
                "bankId": {
                    "type": "integer"
                },
                "receiverAccountNumber": {
                    "type": "string"
                },
                "receiverNickname": {
                    "type": "string"
                }
            }
        },
        "model.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "phoneNumber"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 10
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 5
                },
                "phoneNumber": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 10
                }
            }
        },
        "model.SavedReceiverResponse": {
            "type": "object",
            "required": [
                "id",
                "receiverAccountNumber",
                "receiverNickname"
            ],
            "properties": {
                "bankId": {
                    "type": "integer"
                },
                "bankShortName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "receiverAccountNumber": {
                    "type": "string"
                },
                "receiverNickname": {
                    "type": "string"
                }
            }
        },
        "model.SendOTPRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 10
                }
            }
        },
        "model.SetPasswordRequest": {
            "type": "object",
            "required": [
                "email",
                "otp",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 10
                },
                "otp": {
                    "type": "string",
                    "maxLength": 6,
                    "minLength": 6
                },
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 8
                }
            }
        },
        "model.TransferRequest": {
            "type": "object",
            "required": [
                "otp",
                "transactionId"
            ],
            "properties": {
                "otp": {
                    "type": "string"
                },
                "transactionId": {
                    "type": "string"
                }
            }
        },
        "model.UpdateReceiverRequest": {
            "type": "object",
            "required": [
                "newNickname"
            ],
            "properties": {
                "newNickname": {
                    "type": "string"
                }
            }
        },
        "model.UpdateStaffRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "description": "required",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "model.VerifyOTPRequest": {
            "type": "object",
            "required": [
                "email",
                "otp"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 10
                },
                "otp": {
                    "type": "string",
                    "maxLength": 6,
                    "minLength": 6
                }
            }
        }
    }
}